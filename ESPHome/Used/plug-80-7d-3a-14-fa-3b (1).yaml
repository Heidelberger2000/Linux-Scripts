substitutions:
  devicename: plug-80-7d-3a-14-fa-3b
  upper_devicename: Plug
  # Real Current / Device Current = current_correct
  current_correct: "1"
  # Real Volt / Device Volt = voltage_correct
  # sample.. 220.0 / 118,454888452 = 1.8572471163918900787856528502976
  voltage_correct: "0.3423652694610778"
  # Real Power / Device Power = power_correct
  power_correct: "0.14193962554799103807809550094196"
  update_time: 5s
  name_add_mac_suffix: "true"

esphome:
  name: $devicename
  platform: ESP8266
  board: esp8285

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret hotspot_ssid
    password: !secret hotspot_password

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: !secret ota_password

web_server:
  port: 80

# Time used for daily KWh usage  
time:
  - platform: homeassistant
    id: homeassistant_time

status_led:
  pin:
    number: GPIO0
    inverted: yes

binary_sensor:
    # Button 1 configuration
  - platform: gpio
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
      inverted: True
    id: button_1
    on_press:
      then:
        - switch.toggle: relay_1
    on_click:
      min_length: 5000ms
      max_length: 10000ms
      then:
        - switch.turn_on: reset
  - platform: status
    name: "${upper_devicename} Status"

switch: # Set relays as switches
  - platform: gpio
    id: relay_1
    icon: mdi:power-socket-uk
    pin: GPIO14
    name: "${upper_devicename} Switch"
    on_turn_on:
    - switch.turn_on: sw_led1
    on_turn_off:
    - switch.turn_off: sw_led1
  # Register LED on GPIO
  - platform: gpio
    id: sw_led1
    pin: GPIO13
    inverted: True
  - platform: restart
    name: "${upper_devicename} Restart"
    id: reset

sensor:
  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: True
    cf_pin: GPIO04
    cf1_pin: GPIO5
#    current_resistor: ${current_res}
#    voltage_divider: ${voltage_div}
    current:
      name: "${upper_devicename} Amperage"
      unit_of_measurement: A
      accuracy_decimals: 3
      icon: mdi:flash-circle
      filters:
        - lambda: return x * ${current_correct};
    voltage:
      name: "${upper_devicename} Voltage"
      unit_of_measurement: V
      icon: mdi:flash-circle
      filters:
        - lambda: return x * ${voltage_correct};

    power:
      name: "${upper_devicename} Wattage"
      unit_of_measurement: W
      id: "Wattage"
      icon: mdi:flash-circle
      filters:
        - lambda: return x * ${power_correct};
        
#    change_mode_every: 4
    update_interval: ${update_time}
  - platform: total_daily_energy
    name: "${upper_devicename} Total Daily Energy"
    power_id: "Wattage"
    filters:
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
    unit_of_measurement: kWh
    icon: mdi:clock-alert
  - platform: uptime
    name: "${upper_devicename} Uptime"
    icon: mdi:clock-outline
  - platform: wifi_signal
    name: "${upper_devicename} Wifi Signal"
    update_interval: ${update_time}