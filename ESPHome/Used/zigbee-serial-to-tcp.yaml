esphome:
  name: zigbee-serial-to-tcp
  project:
    name: "Heikos.Zigbee_Gateway"
    version: "1.0"
  name_add_mac_suffix: false

esp8266:
  board: esp01_1m

# Enable logging
logger:
  hardware_uart: uart0_swap
  
# Enable Home Assistant API
api:

ota:
  password: "df99ec3121fcfa6b90b86c143aeac712"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: on

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Zigbee-Serial-To-Tcp"
    password: "iUbZrHteZOE0"

  manual_ip:
    static_ip: 10.24.99.70
    gateway: 10.24.99.1
    subnet: 255.255.255.0
    
captive_portal:

web_server:
  port: 80

external_components:
 - source: github://oxan/esphome-stream-server
  
# requires uart to be set up:
uart:
  id: uart_bus
  tx_pin: GPIO1
  rx_pin: GPIO3
  baud_rate: 115200
  
stream_server:
   uart_id: uart_bus
   port: 8888
   
text_sensor:
  - platform: template
    name: Uptime Human Readable
    id: uptime_human
    icon: mdi:clock-start
sensor:
  - platform: uptime
    name: Uptime Sensor
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();